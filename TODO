To do
=====

- clean up types, conversions, etc

  - idea: conversion to SQL text type accept multiple racket types,
    because of MySQL's no type inference...

  - add operations on prepared-statement (expected param types, etc)

  - permit types in param'd queries
  - permit extra conversions on result fields...
    (eg, in SQLite, explicitly specify "date" conversion)

  - sqlite: add optional conversions based on decltype (eg, date, time)

----

- add security-guard path checks

- write tests for improved simple query functions

- connection-set-notify-callback!, etc; notification struct types
  also, connection option, defaults to void
  convenience function: print-notification takes notification, extracts string, prints
    also print-notification-to-error-port (?)

- eliminate common code (eg, various prepared-statement%)

- sqlite locking?

- sqlite disconnect on custodian shutdown

- bug: create connection, shut down managing custodian, ask connected?
       => output ports may not be shutdown, so says yes but really no
       Solutions: check that ports are still open (?)
                  wrap with custodian-box (?)

- disconnect should always work, even on messed-up connections (eg thread killed)

- create abstraction that combined finalizer with custodian management (?)
