To do
=====

- after Racket 5.1.1 release:
  - set required-core-version to 5.1.1
  - drop private/generic/check-access.rkt
  - split private/generic/socket.rkt into separate package
  - use ryanc/macros:2/lazy-require in main.rkt
  - use ryanc/macros:2/relation in message modules

----

Testing

- run ODBC tests on Mac
- run ODBC DB2, Oracle tests on win32; also test SQL Server ?

- test connection-generators
- test kill-safe-connection

----

Types

- type annotations
  - two modes: mandatory and opportunistic
  - on result fields (eg sqlite, convert to date)
  - on parameters ???
  - per query or per connection? (or both?)
  - either only well-known conversions, or must apply outside of lock

- postgresql record type: docs, send
- postgresql domain types, table record types, etc

- util/postgresql: add inet types
- util/geometry: add WKT functions

- add support for ODBC intervals (no point w/o driver to test with)

----

- doc: enumerate errors
- document exn:fail:sql, when used, when not used, links to SQLSTATE docs?

- disconnect should always work, even on thread-damaged connections
  - but might need version with timeout and/or rudely? flag, because
    I can't think of a way to solve the lock problem that doesn't involve aux thread.

- finish transaction api (tests)
  - add connect option #:rollback-invalid-transactions?
  - enough to implement connection pooling?

- Identify common ODBC errors that can't possibly rollback transaction
  - test with PostgreSQL ODBC driver using "rollback on all errors" mode

- More ODBC information (?)
  SQLGetInfo:
  - SQL_CONVERT_<datatype> - use to refine supported types (?)
  - SQL_CURSOR_{COMMIT,ROLLBACK}_BEHAVIOR - check that commit/rollback doesn't delete pstmts!
  - SQL_MAX_{CATALOG,COLUMN,IDENTIFIER,SCHEMA_NAME,TABLE_NAME}_NAME (min 128)

- cursors? (Olin thinks cursors are important. I'm not sure.)

- wishlist: port-closed-evt would let me implement connection-disconnected-evt,
  might be useful for connection pooling (?)

- odbc: use odbc async execution to avoid blocking all Racket threads
